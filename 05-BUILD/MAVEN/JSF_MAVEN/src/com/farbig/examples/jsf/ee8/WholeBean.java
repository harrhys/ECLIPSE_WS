/* * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER. * * Copyright (c) 2018 Oracle and/or its affiliates. All rights reserved. * * The contents of this file are subject to the terms of either the GNU * General Public License Version 2 only ("GPL") or the Common Development * and Distribution License("CDDL") (collectively, the "License").  You * may not use this file except in compliance with the License.  You can * obtain a copy of the License at * https://oss.oracle.com/licenses/CDDL+GPL-1.1 * or LICENSE.txt.  See the License for the specific * language governing permissions and limitations under the License. * * When distributing the software, include this License Header Notice in each * file and include the License file at packager/legal/LICENSE.txt. * * GPL Classpath Exception: * Oracle designates this particular file as subject to the "Classpath" * exception as provided by Oracle in the GPL Version 2 section of the License * file that accompanied this code. * * Modifications: * If applicable, add the following below the License Header, with the fields * enclosed by brackets [] replaced by your own identifying information: * "Portions Copyright [year] [name of copyright owner]" * * Contributor(s): * If you wish your version of this file to be governed by only the CDDL or * only the GPL Version 2, indicate your decision by adding "[Contributor] * elects to include this software in this distribution under the [CDDL or GPL * Version 2] license."  If you don't indicate a single choice of license, a * recipient has the option to distribute your version of this file under * either the CDDL, the GPL Version 2 or to extend the choice of license to * its licensees as provided above.  However, if you add GPL Version 2 code * and therefore, elected the GPL Version 2 license, then the option applies * only if the new code is made subject to such option by the copyright * holder. */package com.farbig.examples.jsf.ee8;import javax.enterprise.context.RequestScoped;import javax.inject.Named;import javax.validation.constraints.NotNull;import javax.validation.constraints.Size;@Named("wholeBean")@RequestScoped@Whole(groups = WholeValidationGroup.class)public class WholeBean implements Cloneable {  @NotNull(groups = WholeValidationGroup.class)  @Size(max = 16, min = 2, message = "Value1 must be between 2 and 16 characters long",    groups = WholeValidationGroup.class)  private String value1;  @NotNull(groups = WholeValidationGroup.class)  @Size(max = 16, min = 2, message = "Value2 must be between 2 and 16 characters long",    groups = WholeValidationGroup.class)  private String value2;  public WholeBean() {    value1 = "";    value1 = "";  }  @Override  protected Object clone() throws CloneNotSupportedException {    WholeBean other = (WholeBean) super.clone();    other.setValue1(this.getValue1());    other.setValue2(this.getValue2());    return other;  }  public String getValue1() {    return value1;  }  public String getValue2() {    return value2;  }  public void setValue1(String value1) {    this.value1 = value1;  }  public void setValue2(String value2) {    this.value2 = value2;  }  public String submit() {    return "success";  }}