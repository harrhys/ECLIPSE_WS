<!--    @author Copyright (c) 2015, 2020, Oracle and/or its affiliates. All rights reserved. -->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:p="http://xmlns.jcp.org/jsf/passthrough"
      xmlns:jsf="http://xmlns.jcp.org/jsf">

<ui:composition template="../template.xhtml">
  <ui:define name="title">
    <h:outputText value="JSF 2.2 File Upload Sample Application"></h:outputText>
  </ui:define>

  <ui:define name="body">
    <h3>JavaServer Faces 2.2 for FileUpload</h3>

    <P>JSF 2.2 includes a new file upload component that relies upon new Servlet 3.1 file upload support. The file upload support can be Ajax enabled or non-Ajax enabled.</P>

    <P>A new JSF component named inputFile has been added to the list of standard JSF components. This component can be used with or without the f:ajax tag, so files can be uploaded with a page refresh (non-Ajax) or without (Ajax).</P>

    <h3>Description of the Example</h3>

    <P>This example demonstrates the use of a simple file upload component introduced in JSF 2.2.</P>

    <P>In this example, one option demonstrates a traditional file upload operation, while the other option demonstrates a file upload operation over Ajax.<br/><br/>
    </P>
    <ul>
      <li>For both options, click on the <B>Browse</B> button and navigate to the
        <i>javaee7/jsf/fileupload</i> directory.
      </li>
      <li>Choose either <i>inputFileFailure.txt</i> or <i>inputFileSuccess.txt</i>.</li>
      <li>Press the <B>Upload</B> button.</li>
    </ul>
    <P>There is a validator attached to the file input component that examines the contents of the uploaded file, looking for the string
      <i>JSR-344</i>. The
      <i>inputFileFailure.txt</i> file does not contain the string so you should see a validation error:
      <i>Invalid file. File must contain special string.</i> The
      <i>inputFileSuccess.txt</i> file contains the JSR-344 string so you should see a success message:
      <i>This file contains the string JSR-344 and will be successfully set into the model.</i></P>

    <h3>Use This Example</h3>
    <h4>Please choose a option to upload a file.</h4>
    <br/>

    <form jsf:id="form">
      &nbsp;&nbsp;&nbsp;&nbsp;<h:commandButton value="Continue to example" action="inputFile"/>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      <h:commandButton value="Continue to Ajax example" action="inputFileAjax"/>
    </form>
  </ui:define>
</ui:composition>
</html>